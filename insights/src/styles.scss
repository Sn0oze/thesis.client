
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$insights-primary: mat-palette($mat-indigo);
$insights-accent: mat-palette($mat-indigo, A200, A100, A400);

// The warn palette is optional (defaults to red).
$insights-warn: mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$insights-theme: mat-light-theme($insights-primary, $insights-accent, $insights-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($insights-theme);

/* You can add global styles to this file, and also import other style files */

$card-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }

// @import "~bootstrap/scss/bootstrap-reboot";
// @import "~bootstrap/scss/bootstrap-grid";
@import "~bootstrap/scss/bootstrap";

// Disable touch action on material backdrop to prevent scrolling on background content
.cdk-overlay-container, mat-dialog-container{
  touch-action: none;
}

button{
  &:focus{
    outline: none;
  }
}

a[mat-button]:hover{
  text-decoration: none;
  color: inherit;
}

.user-select-none{
  user-select: none;
}

.pointer{
  cursor: pointer;
}

.marked{
  // box-shadow: 0 0 0 1px rgba(0,0,0,0.75) inset;
  &:after{
    background-color: rgba(#4C81C1, 0.5) !important;
    content: '';
    height: 100%;
    width: 100%;
    position: absolute;
    top:0;
    left: 0;
  }
}

//d3 styles
svg {
  &.canvas{
    background-color: transparent;
    cursor: crosshair;
    touch-action: none;
    border: 1px solid #cccccc;
    border-radius: .25rem;
  }
  &.timeline{
    // background-color: #cccccc;
    touch-action: none;
  }
}

.line {
  fill: none;
  stroke: #000;
  stroke-width: 2px;
  stroke-linejoin: round;
}

.bar{
  fill: rgb(136, 205, 255);
  &.weekend{
    fill: #4C81C1;
  }
}

.axis text{
  -webkit-user-select: none; /* Safari */
  -moz-user-select: none; /* Firefox */
  -ms-user-select: none; /* IE10+/Edge */
  user-select: none; /* Standard */
}

$grid-color: rgba(#cccccc, .7);

.grid{
  user-select: none;
  line {
    pointer-events: none;
    stroke: $grid-color;
    stroke-opacity: 0.7;
    shape-rendering: crispEdges;
  }

  .tick{
    &:first-of-type line{
      stroke: black;
    }
  }
}

.grid path {
  stroke-width: 0;
}

.y.axis{
  .domain{
    stroke: transparent;
  }
  .tick line{
    stroke: transparent;
  }
}

.x.axis{
  .domain{
    stroke: transparent;
  }
}

.brush{
  .handle {
    pointer-events: none;
  }
  .selection{
    fill: #cccccc;
  }
  .overlay{
    // pointer-events: none;
    cursor: default;
  }

  .invisible-backdrop{
    background: transparent;
  }
}
